compounds	= statement {statement}
statement	= <expr_stmt>
			| <assign_stmt>
			| <if_stmt>

assign_stmt	= <identifier> = <expr>
if_stmt		= if ( <expr> ) [ { ] <statements> [ } ] [ else [ { ] <statements> [ } ] ]
expr_stmt	= <expr>

term		= <boolean> | <integer> | <double> | <string> | <identifier>
			| ( <expr> )
			| <unaryop>
unaryop		= + <term>
			| - <term>

expr		= <expr15>
expr15		= <expr14> ( || ) <expr14>
expr14		= <expr10> ( && ) <expr10>
expr10		= <expr9> ( == | != ) <expr9>
expr9		= <expr7> ( < | <= | > | >= ) <expr7>
expr7		= <expr6> ( + | - ) <expr6>
expr6		= <expr1> ( * | / ) <expr1>
expr1		= <term>

identifier	= <letter> { <letter> | <digit> | _ }
double		= [ - ] <digit> { <digit> } . <digit> { <digit> }
integer		= [ - ] <digit> { <digit> }
boolean		= true | false

letter		= a | b | c | ... | z | A | B | C | ... | Z
digit		= 0 | 1 | ... | 9